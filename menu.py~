#!/usr/bin/env python
# -*- coding: UTF-8 -*-
# Manto  de Vendedores DRBR 26-May-2007
import sys
import string, os
try:
  import pygtk
  pygtk.require('2.0')
except:
  pass
try:
  import gtk
  import gtk.glade
except:
  sys.exit(1)
try:
  import MySQLdb
except:
  sys.exit(1)
import altavnd
import altaalm
import def_tablas

global mydb
global cia_z
global mibd
global cias
global vendedor
dirprogs_z = ".." + os.sep + "altaalm" + os.sep

#-- Define additional constants
EXIT         = 0
CONTINUE     = 1
NUEVO        = 1
MODIFICA     = 2
BORRAR       = 3
modo_z       = 0
mibd = def_tablas.lee_basedato_ini()
cias = def_tablas.define_cias()
vendedor = def_tablas.define_vendedor()

class Menu:
  """Esta es una aplicación Alta Almacenes"""
       
  def __init__(self):
       
    #Establecemos el archivo Glade
    self.gladefile = dirprogs_z + "menu.glade"
    self.wTree = gtk.glade.XML(self.gladefile)

    dic = { "on_vendedores1_activate": self.on_vendedores1_activate, \
            "on_almacenes1_activate":self. on_almacenes1_activate, \
            "on_salir1_activate":  gtk.main_quit , \
            "on_win_menu_destroy_event": gtk.main_quit }
    self.wTree.signal_autoconnect(dic)
    global cias
    global cia_z
    cia_z = 1
    cias_lines = []
    miwin = self.wTree.get_widget("win_menu")
    miwin.connect("destroy", gtk.main_quit)
    self.notebook=gtk.Notebook()
    self.notebook.set_tab_pos(gtk.POS_TOP)
    vbox_main = self.wTree.get_widget("vbox_main")
    vbox_main.pack_start(self.notebook, True, True, 0)
    vbox_main.show()

    self.wingroup = gtk.WindowGroup()
    self.wingroup.add_window(miwin)


    fh_cias = open('.cias.ini')
    for line in fh_cias.readlines():
        cias_lines.append(string.rstrip(line))
    cia_z = cias_lines[0]

# execute SQL statement
    #mydb = MySQLdb.connect(mibd['host'], mibd['user'], mibd['password'], mibd['base'])

    sql_z = "select * from ciasinv where cia = " + repr(cia_z)
    cias['razon']="MDS"
    #cursor = mydb.cursor()
    #cursor.execute(sql_z)
    #record = cursor.fetchone()
    #cias['cia'] = record[0]
    #cias['razon'] = record[1]
    #cias['dir'] = record[2]
    #cias['dir2'] = record[3]
    #cias['nomfis'] = record[4]
    #cias['tel'] = record[5]
    #cias['fax'] = record[6]
    #cias['rfc'] = record[7]
    miwin.set_title(cias['razon'] + " Menu Principal Inventarios")

  def on_vendedores1_activate(self, widget):
      altavend = altavnd.Altavnd()
      miwin = altavend.wTree.get_widget("win_altavnd")
      btn_cierra = gtk.Button("X")
      vbox_altavnd = altavend.wTree.get_widget("vbox_main")
      vbox_altavnd.pack_start(btn_cierra, 0, 0, False)
      vbox_altavnd.show()
      miwin.remove(vbox_altavnd)
      label = gtk.Label("Mantenimiento de Vendedores")
      self.notebook.append_page(vbox_altavnd, label)
      self.notebook.show()
      miwin.destroy()
    
  def on_almacenes1_activate(self, widget):
      capalm = altaalm.Altaalm()
      miwin = capalm.wTree.get_widget("win_altaalm")
      vbox_altaalm = capalm.wTree.get_widget("vbox_main")
      miwin.remove(vbox_altaalm)
      label = gtk.Label("Mantenimiento de Almacenes")
      self.notebook.append_page(vbox_altaalm, label)
      self.notebook.show()
      miwin.destroy()

if __name__ == "__main__":
#   global mydb
#   global cia_z
#   mibd = def_tablas.lee_basedato_ini()
#   mydb = MySQLdb.connect(mibd['host'], mibd['user'], mibd['password'], mibd['base'])
   hwg = Menu()
   gtk.main()

def main():
#    global mydb
#    mibd = def_tablas.lee_basedato_ini()
#    mydb = MySQLdb.connect(mibd['host'], mibd['user'], mibd['password'], mibd['base'])

    gtk.main()
    return 0
